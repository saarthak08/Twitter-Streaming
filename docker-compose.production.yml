# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: ./Back-End 
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on: 
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/twitter_streaming?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: Saarthak
      SPRING_DATASOURCE_PASSWORD: testing 
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service 
  frontend-server:
    build:
      context: ./Front-End
      dockerfile: Dockerfile.production
    ports:
      - '80:80'
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend  
    stdin_open: true


  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: twitter_streaming
      MYSQL_USER: Saarthak
      MYSQL_PASSWORD: testing
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend  
  
# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:   
   driver: bridge 